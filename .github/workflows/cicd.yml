name: Golang CI/CD Pipeline

on:
  repository_dispatch:
    types: [ trigger-swe-go-common-shared ]
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  verify-go-library:
    name: Verify Go Library
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        go-version: [ '1.22.x', '1.23.x' ]

    env:
      CACHE_PATHS: |
        ~/.cache/go-build
        ~/go/pkg/mod

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Updated to latest stable version

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true  # Ensures the latest patch version is used

      - name: Cache Go Modules
        uses: actions/cache@v4  # Updated to latest stable version
        with:
          path: ${{ env.CACHE_PATHS }}
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install and Verify Dependencies
        run: |
          go mod tidy
          go mod download

      - name: Lint Code
        run: |
          go fmt ./...
          go vet ./...
        continue-on-error: false  # Fail the job if linting fails

      - name: Run Unit Tests
        run: go test -v -race ./...  # Added -race to detect data races

      - name: Update Protobuf Files
        run: ./scripts/update_protobuf.sh
        shell: bash

      - name: Commit and Push Changes
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'repository_dispatch' && github.event.action == 'trigger-swe-go-common-shared'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git status --porcelain | grep .; then
            git add .
            git commit -m "chore: regenerate protobuf files [skip ci]"
            git pull --rebase origin main
            git push origin main
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}